class CopyButtonPlugin {
    constructor(options = {}) {
        // Only the language option is used.
        this.lang = options.lang || document.documentElement.lang || "en";
    }
    "after:highlightElement"({ el, text }) {
        // Prevent adding multiple copy buttons.
        if (el.parentElement.querySelector(".hljs-copy-button")) return;

        const { lang } = this;
        // Create a container for the copy button.
        const container = document.createElement("div");
        container.className = "hljs-copy-container";
        // Create the copy button.
        const button = document.createElement("button");
        button.innerHTML = locales[lang]?.[0] || "Copy";
        button.className = "hljs-copy-button";
        button.dataset.copied = false;

        // Add a class to the parent element to allow additional styling if needed.
        el.parentElement.classList.add("hljs-copy-wrapper");
        // Append the container and then the button.
        el.parentElement.appendChild(container);
        container.appendChild(button);

        // Set CSS variables based on the computed styles of the code block.
        container.style.setProperty("--hljs-theme-background", window.getComputedStyle(el).backgroundColor);
        container.style.setProperty("--hljs-theme-color", window.getComputedStyle(el).color);
        container.style.setProperty("--hljs-theme-padding", window.getComputedStyle(el).padding);

        // Set up the copy button's click event.
        button.onclick = function () {
            if (!navigator.clipboard) return;
            navigator.clipboard.writeText(text)
                .then(function () {
                    button.innerHTML = locales[lang]?.[1] || "Copied!";
                    button.dataset.copied = true;
                    // Create and append an alert message.
                    const alert = document.createElement("div");
                    alert.setAttribute("role", "status");
                    alert.className = "hljs-copy-alert";
                    alert.innerHTML = locales[lang]?.[2] || "Copied to clipboard";
                    el.parentElement.appendChild(alert);
                    // Reset the button text and remove the alert after 2 seconds.
                    setTimeout(() => {
                        button.innerHTML = locales[lang]?.[0] || "Copy";
                        button.dataset.copied = false;
                        el.parentElement.removeChild(alert);
                    }, 2000);
                });
        };
    }
}

if (typeof module !== "undefined") {
    module.exports = CopyButtonPlugin;
}

const locales = {
    en: ["Copy", "Copied!", "Copied to clipboard"],
    es: ["Copiar", "¡Copiado!", "Copiado al portapapeles"],
    "pt-BR": ["Copiar", "Copiado!", "Copiado para a área de transferência"],
    fr: ["Copier", "Copié !", "Copié dans le presse-papier"],
    de: ["Kopieren", "Kopiert!", "In die Zwischenablage kopiert"],
    ja: ["コピー", "コピーしました！", "クリップボードにコピーしました"],
    ko: ["복사", "복사됨!", "클립보드에 복사됨"],
    ru: ["Копировать", "Скопировано!", "Скопировано в буфер обмена"],
    zh: ["复制", "已复制!", "已复制到剪贴板"],
    "zh-tw": ["複製", "已複製!", "已複製到剪貼簿"],
};


